apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      volumes:
      - name: server-vol
        hostPath:
          path: /tmp/regs
      containers:
      - name: server
        volumeMounts:
        - name: server-vol
          mountPath: /tmp/regs
        image: localhost:5000/server:2.0
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
      nodeSelector:
        name: aux
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: server
  name: server
spec:
  selector:
    app: server
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: server
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: server
            port:
              number: 8080
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: server-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: server
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 30
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: server-pv
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 2Gi
  hostPath:
    path: /tmp/regs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: server-pvc
spec:
  volumeName: server-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
